apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: system
spec:
  chart:
    spec:
      chart: ./fluxcd/charts/prometheus-community/kube-prometheus-stack
      sourceRef:
        kind: GitRepository
        name: flux-system
        namespace: flux-system
  install:
    createNamespace: false
  interval: 5m0s
  values:
    fullnameOverride: prometheus
    alertmanager:
      enabled: false
      alertmanagerSpec:
        image:
          registry: ${REGISTRY%/}
          repository: prometheus/alertmanager
      ingress:
        enabled: true
        # ingressClassName: nginx
        paths:
          - /monitoring/alertmanager(/|$)(.*)
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /$2
    grafana:
      enabled: false
    prometheusOperator:
      admissionWebhooks:
        certManager:
          enabled: true
        patch:
          image:
            registry: ${REGISTRY%/}
            repository: ingress-nginx/kube-webhook-certgen
      image:
        registry: ${REGISTRY%/}
        repository: prometheus-operator/prometheus-operator
      prometheusConfigReloader:
        image:
          registry: ${REGISTRY%/}
          repository: prometheus-operator/prometheus-config-reloader
        resources:
          requests:
            cpu: "0"
            memory: "0"
          limits:
            cpu: "0"
            memory: "0"
      thanosImage:
        registry: ${REGISTRY%/}
        repository: thanos/thanos
    prometheus:
      enabled: false
      prometheusSpec:
        image:
          registry: ${REGISTRY%/}
          repository: prometheus/prometheus
        externalUrl: "/monitoring"
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      # podLabels:
      #   app.kubernetes.io/name: node-exporter
      image:
        registry: ${REGISTRY%/}
        repository: prometheus/node-exporter
      nodeSelector:
        kubernetes.io/os: linux
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      image:
        registry: ${REGISTRY%/}
    kubeControllerManager:
      enabled: true
      serviceMonitor:
        enabled: true
        insecureSkipVerify: true
    kubeEtcd:
      enabled: false
      serviceMonitor:
        enabled: false
    kubeScheduler:
      enabled: true
      serviceMonitor:
        enabled: true
        insecureSkipVerify: true
    kubeProxy:
      enabled: false
      serviceMonitor:
        enabled: false
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: false
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubelet: true
        kubeProxy: false
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeScheduler: true
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
